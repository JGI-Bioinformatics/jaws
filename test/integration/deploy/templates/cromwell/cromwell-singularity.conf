{%- set sitename = "{}".format(install.components.jaws_site.site_name) -%}
{%- set jtm_config = "{}".format(site[sitename]['jtm']['config_file']) -%}

include required(classpath("application"))
webservice
{
  port = {{cromwell.deploy_name.port}}}
}
system
{
  abort-jobs-on-terminate = true
  graceful-server-shutdown = true
  workflow-restart = false
  max-concurrent-workflows = 100000
  max-workflow-launch-count = 100000
  new-workflow-poll-rate = 1
  number-of-workflow-log-copy-workers = 20
  number-of-cache-read-workers = 50
  job-rate-control
  {
    jobs = 1
    per = 1 second
  }
}
workflow-options
{
  workflow-log-dir: "{{cromwell.workflow_log_dir}}"
  workflow-log-temporary: false
  workflow-failure-mode: "ContinueWhilePossible"
  default
  {
    workflow-type: WDL
    workflow-type-version: "draft-2"
  }
}
call-caching
{
  enabled = false
  invalidate-bad-cache-result = true
}
# this is required for shifter to find image from its registry.
docker {
    hash-lookup {
        enabled = false
    }
}
backend
{
  default = "JTM"
  providers
  {
    JTM
    {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        exit-code-timeout-seconds = 60
        runtime-attributes = """
        String? docker
        String time = "00:30:00"
        Int cpu = 1
        String mem = "5G"
        String cluster = "jgi"
        String poolname = "small"
        String constraint = ""
        String qos = "condo_jgicloud"
        String account = "lr_jgicloud"
        Int node = 1
        Int nwpn = 1
        Int shared = 0
        """

        kill = "jtm --config={{jtm_config}} kill -tid ${job_id}"

        check-alive = "jtm --config={{jtm_config}} isalive -tid ${job_id}

        job-id-regex = "JTM task ID (\\d+)"

        submit = """
jtm --config={{jtm_config}} submit \
  -cmd '/bin/bash ${script}' \
  -cl ${cluster} -t ${time} \
  -c ${cpu} -m ${mem} \
  -p ${poolname} \
  -N ${node} \
  -nwpn ${nwpn} \
  -jid ${job_name} \
  -A ${account} \
  --shared ${shared} \
  --qos ${qos}
"""


        submit-docker = """
jtm --config={{jtm_config}} submit \
  -cmd '{{cromwell.container_exec}} {{cromwell.ref_data_dir']}} /refdata ${docker} ${job_shell} ${script}' \
  -cl ${cluster} \
  -t ${time} \
  -c ${cpu} \
  -m ${mem} \
  -p ${poolname} \
  -N ${node} \
  -nwpn ${nwpn} \
  -jid ${job_name} \
  -A ${account} \
  --shared ${shared} \
  --qos ${qos}
"""

        # Root directory where Cromwell writes job results in the container. This value
        # can be used to specify where the execution folder is mounted in the container.
        # it is used for the construction of the docker_cwd string in the submit-docker
        # value above AND in the generation of the "script" file.
        dockerRoot = {{cromwell.docker_root}}
      }
    }
  }
}
database
{
  profile = "slick.jdbc.MySQLProfile$"
  db
  {
    driver = "com.mysql.cj.jdbc.Driver"
    url = "{{cromwell.deploy_name.mysql.url}}"
    user = "cromwell.deploy_name.mysql.user}}"
    password = "{{cromwell.deploy_name.mysql.password}}"
    connectionTimeout = 5000
  }
  insert-batch-size = 2000
}
