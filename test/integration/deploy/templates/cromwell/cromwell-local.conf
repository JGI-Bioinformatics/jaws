include required(classpath("application"))

webservice
{
  port = {{cromwell.deploy_name.port}}
}

system
{
  abort-jobs-on-terminate = false
  graceful-server-shutdown = true
  workflow-restart = true
  max-concurrent-workflows = 100000
  max-workflow-launch-count = 100000
  new-workflow-poll-rate = 1
  number-of-workflow-log-copy-workers = 20
  number-of-cache-read-workers = 50
}

workflow-options
{
  workflow-log-dir: "$JAWS_CROMWELL_WORKFLOW_LOG_DIR"
  workflow-log-temporary: false
  workflow-failure-mode: "ContinueWhilePossible"
  default
  {
    workflow-type: WDL
    workflow-type-version: "draft-2"
  }
}

call-caching
{
  enabled = true
  invalidate-bad-cache-result = true
}

# this is required for shifter to find image from its registry.
docker {
    hash-lookup {
        enabled = false
    }
}

backend
{
  default = "Local"

  providers
  {

    Local
    {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

      config
      {
        concurrent-job-limit = 7
        run-in-background = true
        temporary-directory = "`mktemp -d \"$INSTALL_DIR\"/cromwell-tmp.XXXXXX"`"

        # The list of possible runtime custom attributes.
        runtime-attributes = """
        String? docker
        """

        # Submit string when there is no "docker" runtime attribute.
        submit = "/usr/bin/env bash ${script}"

        submit-docker = """
            ${job_shell} ${script}
        """

    		dockerRoot = $INSTALL_DIR/cromwell-executions

        filesystems
        {
          local
          {
            localization: [ "soft-link", "copy" ]

            caching {
              duplication-strategy: [ "soft-link", "file" ]
              hashing-strategy: "file"
            }
          }
        }

        default-runtime-attributes
        {
          failOnStderr: false
          continueOnReturnCode: 0
        }
      }
    }

  }
}
