#!/usr/bin/env bash

echo "BEGIN deploy-cromwell"

function fix_perms() {
    local GROUP=$1
    local DIR="$2"
    chmod -R a+rX "$DIR"
    chmod -R ug+rwX "$DIR"
    chgrp -R $GROUP "$DIR"
    find "$DIR" -type d -exec chmod g+s '{}' \;
}

## ENV VARS
REQUIRED_VARS="
DEPLOYMENT_NAME
JAWS_VERSION
JAWS_DOCS_URL
JAWS_CENTRAL_HOST
JAWS_CENTRAL_RMQ_HOST
JAWS_CENTRAL_RMQ_PORT
JAWS_GLOBUS_CLIENT_ID
CROMWELL_VERSION
"
RESULT=0
for VAR in $REQUIRED_VARS; do
  if [ -z ${!VAR+xxx} ]; then
    echo "Missing env var: $VAR">&2
    RESULT=1
  fi
done
[ $RESULT -eq 0 ] || exit 1

echo "DEFINING SITE VARS"
function set_site_var {
  VAR_NAME="$1"
  SRC_VAR_NAME="${JAWS_SITE}_${VAR_NAME}"
  if [ -z ${!SRC_VAR_NAME+xxx} ]; then
    echo "Missing env var: $SRC_VAR_NAME">&2
    exit 1
  fi
  SITE_VAR_NAME="SITE_${VAR_NAME}"
  VALUE="${!SRC_VAR_NAME}"
  echo "... $SITE_VAR_NAME"
  export $SITE_VAR_NAME
  printf -v "$SITE_VAR_NAME" "%s" "$VALUE"
}
SITE_VARS="
JTM_GROUP
INSTALL_BASEDIR
GLOBUS_EP
GLOBUS_ROOT_DIR
GLOBUS_DEFAULT_DIR
RMQ_HOST
RMQ_PORT
PYTHON
PYTHON_PIP
LOAD_PYTHON
JAWS_GROUP
CLIENT_GROUP
JAWS_SCRATCH_BASEDIR
JTM_SCRATCH_BASEDIR
JAWS_SW_BASEDIR
JTM_SW_BASEDIR
REF_DATA_DIR
SUPERVISOR_HOST
CONTAINER_TYPE
DB_HOST
DB_PORT
CLUSTER_QOS
CLUSTER_PARTITION
CLUSTER_ACCOUNT
CLUSTER_CONSTRAINT
MAX_RAM_GB
RMQ_PW
DB_PW
LOAD_JAVA"
for SITE_VAR in $SITE_VARS; do
  set_site_var $SITE_VAR
done

echo "DEFINING PATHS"
export INSTALL_DIR="$SITE_INSTALL_BASEDIR/jaws-$DEPLOYMENT_NAME"
export CONFIG_DIR="$INSTALL_DIR/configs"
export SHIM_DIR="$INSTALL_DIR/shims"
export LOGS_DIR="$INSTALL_DIR/logs"
export SUPERVISOR_DIR="$SITE_INSTALL_BASEDIR/jaws-supervisord-$DEPLOYMENT_NAME"
export SITE_JTM_SCRATCH_DIR="$SITE_JTM_SCRATCH_BASEDIR/jaws-$DEPLOYMENT_NAME"
export SITE_JTM_WORKER_INSTALL_DIR="$SITE_JTM_SW_BASEDIR/jtm-$DEPLOYMENT_NAME"
export SITE_CROMWELL_TMPDIR="$INSTALL_DIR/cromwell-tmp"
export SITE_CROMWELL_JAR="$SITE_JAWS_SW_BASEDIR/cromwell/cromwell-$CROMWELL_VERSION.jar"
export SITE_CONTAINERS_DIR="$SITE_JTM_SCRATCH_BASEDIR/${SITE_CONTAINER_TYPE}_files"
export CROMWELL_TMPDIR="$INSTALL_DIR/cromwell-tmp"
export CROMWELL_WORKFLOW_LOGS_DIR="$LOGS_DIR/cromwell-workflow-logs"
export CROMWELL_EXECUTIONS_DIR="$SITE_JTM_SCRATCH_DIR/cromwell-executions"
export JTM_CONFIG_FILE="$SITE_JTM_WORKER_INSTALL_DIR/jaws-jtm.conf"
export INSTALLED_CROMWELL_JAR="$INSTALL_DIR/cromwell.jar"

echo "DEFINING DEPLOYMENT VARS"
function set_deployment_var {
  VAR_NAME="$1"
  SRC_VAR_NAME="${DEPLOYMENT_NAME}_${VAR_NAME}"
  if [ -z ${!SRC_VAR_NAME+xxx} ]; then
    echo "Missing env var: $SRC_VAR_NAME">&2
    exit 1
  fi
  VALUE="${!SRC_VAR_NAME}"
  echo "... $VAR_NAME"
  export $VAR_NAME
  printf -v "$VAR_NAME" "%s" "$VALUE"
}
DEPLOYMENT_VARS="
LOG_LEVEL
CROMWELL_PORT"
for DEPLOYMENT_VAR in $DEPLOYMENT_VARS; do
  set_deployment_var $DEPLOYMENT_VAR
done


## CREATE DIRS AND SET GROUP AND PERMISSIONS
function setup_dir {
  local DIR="$1"
  local GROUP="$2"
  local PERMS="$3"
  [[ -z $DIR ]] && echo "missing DIR" && exit 1
  [[ -z $GROUP ]] && echo "missing GROUP" && exit 1
  echo "... $DIR"
  test -d "$DIR" || mkdir -p "$DIR"
  chgrp "$GROUP" "$DIR"
  chmod "$PERMS" "$DIR"
}
echo "CREATING PATHS"
INSTALL_DIRS="
INSTALL_DIR
CONFIG_DIR
SHIM_DIR
LOGS_DIR
SUPERVISOR_DIR
SITE_CONTAINERS_DIR
SITE_JTM_WORKER_INSTALL_DIR
SITE_CROMWELL_TMPDIR
CROMWELL_TMPDIR
CROMWELL_WORKFLOW_LOGS_DIR
"
for DIR in $INSTALL_DIRS; do
  setup_dir "${!DIR}" "$SITE_JTM_GROUP" 770
done

setup_dir "$SITE_JTM_SCRATCH_DIR" "$SITE_JTM_GROUP" 775
setup_dir "$SITE_JTM_WORKER_INSTALL_DIR" "$SITE_JTM_GROUP" 770
setup_dir "$CROMWELL_EXECUTIONS_DIR" "$SITE_JTM_GROUP" 775


## COPY CROMWELL JAR
cp "$SITE_CROMWELL_JAR" "$INSTALLED_CROMWELL_JAR" && \
  chgrp "$SITE_JTM_GROUP" "$INSTALLED_CROMWELL_JAR" && \
  chmod 640 "$INSTALLED_CROMWELL_JAR"


## DEFINE CROMWELL CONFIG CODEBLOCK AND SCRIPTS APPROPRIATE TO CONTAINER SYSTEM USED BY THIS SITE
CONTAINER_CHECK=""
if [[ "$SITE_CONTAINER_TYPE" == "shifter" ]]; then
  CONTAINER_CHECK="shifterimg lookup \${docker} || shifterimg pull \${docker}"
fi
CONTAINER_WRAPPER="docker run"
if [ $SITE_CONTAINER_TYPE = "shifter" ]; then
  CONTAINER_WRAPPER="$SITE_JTM_WORKER_INSTALL_DIR/shifter_exec.sh"

  cat <<EOM > "$CONTAINER_WRAPPER"
#!/usr/bin/env bash
shifter --image=\$1 -V $SITE_REF_DATA_DIR:/refdata \$2 \$3
EOM
  chgrp "$SITE_JTM_GROUP" "$SITE_JTM_WORKER_INSTALL_DIR/shifter_exec.sh"
  chmod 775 "$SITE_JTM_WORKER_INSTALL_DIR/shifter_exec.sh"

elif [ $SITE_CONTAINER_TYPE = "singularity" ]; then
  CONTAINER_WRAPPER="$SITE_JTM_WORKER_INSTALL_DIR/singularity_exec.sh"
  cat <<EOM > "$CONTAINER_WRAPPER"
#!/usr/bin/env bash
export SINGULARITY_CACHEDIR=$SITE_CONTAINERS_DIR
export SINGULARITY_PULLFOLDER=$SITE_CONTAINERS_DIR
export SINGULARITY_TMPDIR=$SITE_CONTAINERS_DIR
export SINGULARITY_LOCALCACHEDIR=$SITE_CONTAINERS_DIR
singularity exec --bind \$1:\$2 --bind $SITE_REF_DATA_DIR:/refdata docker://\$3 \$4 \$5
exit \$?
EOM
  chgrp "$SITE_JTM_GROUP" "$SITE_JTM_WORKER_INSTALL_DIR/singularity_exec.sh"
  chmod 775 "$SITE_JTM_WORKER_INSTALL_DIR/singularity_exec.sh"
fi


## GENERATE CONFIG
cat << EOM > $CONFIG_DIR/cromwell.conf
include required(classpath("application"))
webservice
{
  port = $CROMWELL_PORT
}
system
{
  abort-jobs-on-terminate = true
  graceful-server-shutdown = true
  workflow-restart = false
  max-concurrent-workflows = 100000
  max-workflow-launch-count = 100000
  new-workflow-poll-rate = 1
  number-of-workflow-log-copy-workers = 20
  number-of-cache-read-workers = 50
  job-rate-control
  {
    jobs = 1
    per = 1 second
  }
}
workflow-options
{
  workflow-log-dir: "$CROMWELL_WORKFLOW_LOGS_DIR"
  workflow-log-temporary: false
  workflow-failure-mode: "ContinueWhilePossible"
  default
  {
    workflow-type: WDL
    workflow-type-version: "draft-2"
  }
}
call-caching
{
  enabled = false
  invalidate-bad-cache-result = true
}
# this is required for shifter to find image from its registry.
docker {
    hash-lookup {
        enabled = false
    }
}
backend
{
  default = "JTM"
  providers
  {
    JTM
    {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        exit-code-timeout-seconds = 60
        runtime-attributes = """
        String? docker
        String time = "00:30:00"
        Int cpu = 1
        String mem = "5G"
        String cluster = "${JAWS_SITE,,}"
        String poolname = "small"
        String constraint = "$SITE_CLUSTER_CONSTRAINT"
        String qos = "$SITE_CLUSTER_QOS"
        String account = "$SITE_CLUSTER_ACCOUNT"
        Int node = 1
        Int nwpn = 1
        Int shared = 0
        """

        kill = "jtm --config=$JTM_CONFIG_FILE kill -tid \${job_id}"

        check-alive = "jtm --config=$JTM_CONFIG_FILE isalive -tid \${job_id}"

        job-id-regex = "JTM task ID (\\\d+)"

        submit = """
CONSTRAINT=\${constraint}
[ -z \$CONSTRAINT ] || CONSTRAINT="-C \$CONSTRAINT"
jtm --config=$JTM_CONFIG_FILE \
submit \
-cmd '/bin/bash \${script}' \
-cl \${cluster} \
-t \${time} \
-c \${cpu} \
-m \${mem} \
-p \${poolname} \
-N \${node} \
-nwpn \${nwpn} \
-jid \${job_name} \
--qos \${qos} \
-A \${account} \
--shared \${shared} \
\$CONSTRAINT
"""


        submit-docker = """
CONSTRAINT=\${constraint}
$CONTAINER_CHECK
[ -z \$CONSTRAINT ] || CONSTRAINT="-C \$CONSTRAINT"
jtm --config=$JTM_CONFIG_FILE \
submit \
-cmd '$CONTAINER_WRAPPER \${docker} \${job_shell} \${script}' \
-cl \${cluster} \
-t \${time} \
-c \${cpu} \
-m \${mem} \
-p \${poolname} \
-N \${node} \
-nwpn \${nwpn} \
-jid \${job_name} \
--qos \${qos} \
-A \${account} \
--shared \${shared} \
\$CONSTRAINT
"""

        # Root directory where Cromwell writes job results in the container. This value
        # can be used to specify where the execution folder is mounted in the container.
        # it is used for the construction of the docker_cwd string in the submit-docker
        # value above AND in the generation of the "script" file.
        dockerRoot = $CROMWELL_EXECUTIONS_DIR
      }
    }
  }
}
database
{
  profile = "slick.jdbc.MySQLProfile$"
  db
  {
    driver = "com.mysql.cj.jdbc.Driver"
    url = "jdbc:mysql://$SITE_DB_HOST:$SITE_DB_PORT/cromwell_${JAWS_SITE,,}_$DEPLOYMENT_NAME?rewriteBatchedStatements=true&useSSL=false&autoReconnect=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"
    user = "jaws"
    password = "$SITE_DB_PW"
    connectionTimeout = 5000
  }
  insert-batch-size = 2000
}
EOM
chmod 660 "$CONFIG_DIR/cromwell.conf"
chgrp "$SITE_JTM_GROUP" "$CONFIG_DIR/cromwell.conf"


## GENERATE SHIM
cat <<EOM > "$SHIM_DIR/jaws-cromwell-$DEPLOYMENT_NAME"
#!/usr/bin/env bash

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export PYTHONIOENCODING=utf-8

# cromwell needs jtm to be in path
source $INSTALL_DIR/jtm/bin/activate

$SITE_LOAD_JAVA

test -d $SITE_JTM_SCRATCH_DIR || mkdir $SITE_JTM_SCRATCH_DIR
cd $SITE_JTM_SCRATCH_DIR
exec java -Xmx5g -Dconfig.file="$CONFIG_DIR/cromwell.conf" -Djava.io.tmpdir="$SITE_CROMWELL_TMPDIR" -jar "$INSTALL_DIR/cromwell.jar" server
EOM
chgrp "$SITE_JTM_GROUP" "$SHIM_DIR/jaws-cromwell-$DEPLOYMENT_NAME"
chmod 770 "$SHIM_DIR/jaws-cromwell-$DEPLOYMENT_NAME"

printf "END deploy-cromwell\n\n"
