#!/usr/bin/env bash

# import helper functionn from any location
# taken from https://stackoverflow.com/questions/192292/how-best-to-include-other-scripts
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
. "$DIR/utils.sh"

echo "BEGIN deploy-client"

# NB: this should be run after generate-venvs because it doesn't `make pkg`

## VERIFY REQUIRED VARS ARE DEFINED
# If any env are undefined, try sourcing the setup script and check again.
# Exits if any required var is undefined.
REQUIRED_VARS="
DEPLOYMENT_NAME
INSTALL_DIR
LOGS_DIR
CONFIG_DIR
SITE_CLIENT_INSTALL_DIR
SITE_CLIENT_GROUP
SITE_LOAD_PYTHON
SITE_LOAD_JAVA
"
RESULT=0
for VAR in $REQUIRED_VARS; do
  if [ -z ${!VAR+xxx} ]; then
    echo "Missing env var, $VAR; sourcing setup script..."
    source ./test/integration/define-env
    RESULT=1
    break
  fi
done
if [[ $RESULT -ne 0 ]]; then
  RESULT=0
  for VAR in $REQUIRED_VARS; do
    if [ -z ${!VAR+xxx} ]; then
      echo "Missing env var: $VAR">&2
      RESULT=1
    fi
  done
fi
[ $RESULT -eq 0 ] || exit 1

## DELETE OLD VENV
test -d "$SITE_CLIENT_INSTALL_DIR" && rm -rf "$SITE_CLIENT_INSTALL_DIR"
mkdir -p "$SITE_CLIENT_INSTALL_DIR"
chmod 755 "$SITE_CLIENT_INSTALL_DIR"


## MAKE VENV
[[ -n "$SITE_LOAD_PYTHON" ]] && $SITE_LOAD_PYTHON
CLIENT_DIST_DIR="client/dist"
make pkg-client
fix_perms "$SITE_CLIENT_GROUP" "$CLIENT_DIST_DIR"
mv "$CLIENT_DIST_DIR" "$SITE_CLIENT_INSTALL_DIR"
echo "Make venv in $SITE_CLIENT_INSTALL_DIR"
$SITE_PYTHON -m venv "$SITE_CLIENT_INSTALL_DIR" && \
  . "$SITE_CLIENT_INSTALL_DIR/bin/activate" && \
  pip install $SITE_CLIENT_INSTALL_DIR/dist/* && \
  deactivate

cat << EOM > $SITE_CLIENT_INSTALL_DIR/jaws-$DEPLOYMENT_NAME.sh
# source this file to activate jaws-$DEPLOYMENT_NAME

$SITE_LOAD_JAVA

$SITE_LOAD_PYTHON
source "$SITE_CLIENT_INSTALL_DIR/bin/activate"

export JAWS_CLIENT_CONFIG=$SITE_CLIENT_INSTALL_DIR/jaws-$DEPLOYMENT_NAME.conf
export JAWS_USER_CONFIG=~/jaws.conf

echo "jaws-$DEPLOYMENT_NAME activated; see \"jaws --help\" for more."
EOM

chgrp $SITE_JAWS_GROUP $SITE_CLIENT_INSTALL_DIR/jaws-$DEPLOYMENT_NAME.sh
chmod 775 $SITE_CLIENT_INSTALL_DIR/jaws-$DEPLOYMENT_NAME.sh

## GENERATE CONFIGS
cat << EOM > $SITE_CLIENT_INSTALL_DIR/jaws.conf
[USER]
token =
staging_dir =
EOM

chgrp $SITE_JAWS_GROUP $SITE_CLIENT_INSTALL_DIR/jaws.conf
chmod 775 $SITE_CLIENT_INSTALL_DIR/jaws.conf

cat << EOM > $CONFIG_DIR/jaws-$DEPLOYMENT_NAME.conf
[JAWS]
site_id = $JAWS_SITE
url = $JAWS_CENTRAL_HOST:$JAWS_REST_PORT/api/v2
womtool_jar = $SITE_WOMTOOL_JAR
uploads_subdir = $SITE_UPLOADS_SUBDIR
staging_dir = $STAGING_USER_DIR
data_repo_basedir = $DATA_REPO_DIR
shared_endpoint_group = $SITE_CLIENT_GROUP
[GLOBUS]
client_id = $JAWS_GLOBUS_CLIENT_ID
endpoint_id = $SITE_GLOBUS_EP
basedir = $SITE_GLOBUS_ROOT_DIR
EOM

chgrp $SITE_JAWS_GROUP $CONFIG_DIR/jaws-$DEPLOYMENT_NAME.conf
chmod 644 $CONFIG_DIR/jaws-$DEPLOYMENT_NAME.conf
cp "$CONFIG_DIR/jaws-$DEPLOYMENT_NAME.conf" "$SITE_CLIENT_INSTALL_DIR"


# Finally setup the user directories for staging and storing data
if [[ ! -z "$STAGING_USER_DIR" ]]; then
    setup_dir "$STAGING_USER_DIR" "$SITE_CLIENT_GROUP" 2775
fi
if [[ ! -z "$DATA_REPO_DIR" ]]; then
    setup_dir "$DATA_REPO_DIR" "$SITE_CLIENT_GROUP" 2775
fi

# at this point, jaws-client is not usable due to permissions, but changing group and permissions via the gitlab-runner
# does not work for parallel-FS for some reason.  The solution is to add such commands to one of the shims so that the
# command are run by the jaws user via supervisord.  This is a hack.  See: jaws-central-daemon shim for more.
printf "END deploy-client\n\n"

