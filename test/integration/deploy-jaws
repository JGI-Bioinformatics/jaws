#!/bin/bash -l

# comment out set -e because this breaks the deployment to tahoma
# because the chgrp command in test/integration/define-env fails for /big_scratch/singularity_files
#set -e

echo "BEGIN deploy-jaws"

source ./test/integration/define-env

## VERIFY REQUIRED VARS ARE DEFINED
# If any env are undefined, try sourcing the setup script and check again.
# Exits if any required var is undefined.
REQUIRED_VARS="
SUPERVISOR_DIR
DEPLOYMENT_NAME
SITE_LOAD_PYTHON
"
RESULT=0
for VAR in $REQUIRED_VARS; do
  if [ -z ${!VAR+xxx} ]; then
    echo "Missing env var, $VAR; sourcing setup script..."
    source ./test/integration/define-env
    RESULT=1
    break
  fi
done
if [[ $RESULT -ne 0 ]]; then
  RESULT=0
  for VAR in $REQUIRED_VARS; do
    if [ -z ${!VAR+xxx} ]; then
      echo "Missing env var: $VAR">&2
      RESULT=1
    fi
  done
fi
[ $RESULT -eq 0 ] || exit 1


# check if SITE_LOAD_PYTHON is set. This implies
# that modules are present on host though deployment
# should be smarter about module detection.
if [[ ! -z $SITE_LOAD_PYTHON ]]; then
  module unload python 
fi
$SITE_LOAD_PYTHON

# stop services
test -f $SUPERVISOR_DIR/supervisord-jaws.conf && $SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jaws.conf stop jaws-$DEPLOYMENT_NAME:*
test -f $SUPERVISOR_DIR/supervisord-cwl-backend.conf && $SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-cwl-backend.conf stop jaws-$DEPLOYMENT_NAME:*

# install services
./test/integration/generate-venvs
./test/integration/generate-configs
./test/integration/generate-shims
./test/integration/deploy-supervisord

## start services
$SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jaws.conf reread
$SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jaws.conf start jaws-$DEPLOYMENT_NAME:*

echo "END deploy-jaws"
