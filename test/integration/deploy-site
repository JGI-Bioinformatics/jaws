#!/usr/bin/env bash

# Deploy the jaws-site service

set -e

function fix_perms() {
    local GROUP=$1
    local DIR="$2"
    chmod -R a+rX "$DIR"
    chmod -R ug+rwX "$DIR"
    chgrp -R $GROUP "$DIR"
    find "$DIR" -type d -exec chmod g+s '{}' \;
}

echo "BEGIN deploy-site"

## ENV VARS
REQUIRED_VARS="
DEPLOYMENT_NAME
JAWS_CENTRAL_RMQ_HOST
JAWS_CENTRAL_RMQ_PORT
JAWS_CENTRAL_RMQ_PW
JAWS_GLOBUS_CLIENT_ID
JAWS_SITE
"
RESULT=0
for VAR in $REQUIRED_VARS; do
  if [ -z ${!VAR+xxx} ]; then
    echo "Missing env var: $VAR">&2
    RESULT=1
  fi
done
[ $RESULT -eq 0 ] || exit 1

## DEPLOYMENT-SPECIFIC VARIABLES
echo "DEFINING DEPLOYMENT VARS"
function set_deployment_var {
  VAR_NAME="$1"
  SRC_VAR_NAME="${DEPLOYMENT_NAME}_${VAR_NAME}"
  if [ -z ${!SRC_VAR_NAME+xxx} ]; then
    echo "Missing env var: $SRC_VAR_NAME">&2
    exit 1
  fi
  VALUE="${!SRC_VAR_NAME}"
  echo "... $VAR_NAME"
  export $VAR_NAME
  printf -v "$VAR_NAME" "%s" "$VALUE"
}
DEPLOYMENT_VARS="
LOG_LEVEL
JAWS_SUPERVISOR_PORT
JTM_SUPERVISOR_PORT
JAWS_AUTH_PORT
JAWS_REST_PORT
CROMWELL_PORT"
for DEPLOYMENT_VAR in $DEPLOYMENT_VARS; do
  set_deployment_var $DEPLOYMENT_VAR
done

## SITE-SPECIFIC VARIABLES:
## This will define global vars with a SITE_ prefix, with values from variables referenced by the JAWS_SITE
## variable.  For instance, if JAWS_SITE="JGI", setting GLOBUS_EP site var will define a SITE_GLOBUS_EP var
## with the value from JGI_GLOBUS_EP.  
## This allows the site installation scripts to use the SITE_* vars.
echo "DEFINING SITE VARS"
function set_site_var {
  VAR_NAME="$1"
  SRC_VAR_NAME="${JAWS_SITE}_${VAR_NAME}"
  if [ -z ${!SRC_VAR_NAME+xxx} ]; then
    echo "Missing env var: $SRC_VAR_NAME">&2
    exit 1
  fi
  SITE_VAR_NAME="SITE_${VAR_NAME}"
  VALUE="${!SRC_VAR_NAME}"
  echo "... $SITE_VAR_NAME"
  export $SITE_VAR_NAME
  printf -v "$SITE_VAR_NAME" "%s" "$VALUE"
}
SITE_VARS="
INSTALL_BASEDIR
GLOBUS_EP
GLOBUS_ROOT_DIR
GLOBUS_DEFAULT_DIR
RMQ_HOST
RMQ_PORT
PYTHON
PYTHON_PIP
LOAD_PYTHON
JAWS_GROUP
JTM_GROUP
CLIENT_GROUP
JAWS_SCRATCH_BASEDIR
JTM_SCRATCH_BASEDIR
JAWS_SW_BASEDIR
JTM_SW_BASEDIR
REF_DATA_DIR
SUPERVISOR_HOST
CONTAINER_TYPE
DB_HOST
DB_PORT
CLUSTER_QOS
CLUSTER_PARTITION
CLUSTER_ACCOUNT
CLUSTER_CONSTRAINT
MAX_RAM_GB
RMQ_PW
DB_PW
LOAD_JAVA"
for SITE_VAR in $SITE_VARS; do
  set_site_var $SITE_VAR
done

## DEFINE VARS FROM OTHER VARS
echo "DEFINING PATHS"
export INSTALL_DIR="$SITE_INSTALL_BASEDIR/jaws-$DEPLOYMENT_NAME"
export CONFIG_DIR="$INSTALL_DIR/configs"
export SHIM_DIR="$INSTALL_DIR/shims"
export LOGS_DIR="$INSTALL_DIR/logs"
export SUPERVISOR_DIR="$SITE_INSTALL_BASEDIR/jaws-supervisord-$DEPLOYMENT_NAME"

# Site paths:
export SITE_CLIENT_INSTALL_DIR="$SITE_JAWS_SW_BASEDIR/jaws-$DEPLOYMENT_NAME"
export SITE_JAWS_SCRATCH_DIR="$SITE_JAWS_SCRATCH_BASEDIR/jaws-$DEPLOYMENT_NAME"
export SITE_JTM_SCRATCH_DIR="$SITE_JTM_SCRATCH_BASEDIR/jaws-$DEPLOYMENT_NAME"

# Globus-related dirs:
export SITE_CROMWELL_TMPDIR="$INSTALL_DIR/cromwell-tmp"
export SITE_UPLOADS_DIR="$SITE_JTM_SCRATCH_DIR/uploads"
export SITE_DOWNLOADS_DIR="$SITE_JAWS_SCRATCH_DIR/downloads"

# Cromwell-related dirs
export SITE_CROMWELL_JAR="$SITE_JAWS_SW_BASEDIR/cromwell/cromwell-$CROMWELL_VERSION.jar"
export SITE_WOMTOOL_JAR="$SITE_JAWS_SW_BASEDIR/cromwell/womtool-$CROMWELL_VERSION.jar"
export SITE_CONTAINERS_DIR="$SITE_JTM_SCRATCH_BASEDIR/${SITE_CONTAINER_TYPE}_files"
export CROMWELL_TMPDIR="$INSTALL_DIR/cromwell-tmp"
export CROMWELL_WORKFLOW_LOGS_DIR="$LOGS_DIR/cromwell-workflow-logs"
export INSTALLED_CROMWELL_JAR="$INSTALL_DIR/cromwell.jar"

# Globus has some rules about how paths are interpreted, depending on how the endpoint is configured.
[[ ${SITE_GLOBUS_ROOT_DIR: -1} == "/" ]] || SITE_GLOBUS_ROOT_DIR="$SITE_GLOBUS_ROOT_DIR/"
if [[ $SITE_GLOBUS_ROOT_DIR == "/" ]]; then
  export SITE_UPLOADS_SUBDIR=$SITE_UPLOADS_DIR
  export SITE_DOWNLOADS_SUBDIR=$SITE_DOWNLOADS_DIR
else
  export SITE_UPLOADS_SUBDIR=${SITE_UPLOADS_DIR#$SITE_GLOBUS_ROOT_DIR}
  export SITE_DOWNLOADS_SUBDIR=${SITE_DOWNLOADS_DIR#$SITE_GLOBUS_ROOT_DIR}
fi


## CREATE DIRS AND SET GROUP AND PERMISSIONS
## - there are expected to be "jaws" and "jtm" users
## - "jaws" user belongs to "jaws" and "jtm" groups
## - "jtm" user belongs to "jtm" group and no others for security purposes
## - users don't belong to either "jaws" or "jtm" groups (protected)
function setup_dir {
  local DIR="$1"
  local GROUP="$2"
  local PERMS="$3"
  [[ -z $DIR ]] && echo "missing DIR" && exit 1
  [[ -z $GROUP ]] && echo "missing GROUP" && exit 1
  echo "... $DIR"
  test -d "$DIR" || mkdir -p "$DIR"
  chgrp "$GROUP" "$DIR"
  chmod "$PERMS" "$DIR"
}
echo "CREATING PATHS"
INSTALL_DIRS="
INSTALL_DIR
CONFIG_DIR
SHIM_DIR
LOGS_DIR
SUPERVISOR_DIR
SITE_CONTAINERS_DIR
SITE_JAWS_SCRATCH_DIR
SITE_CROMWELL_TMPDIR
CROMWELL_TMPDIR
CROMWELL_WORKFLOW_LOGS_DIR
"
for DIR in $INSTALL_DIRS; do
  setup_dir "${!DIR}" "$SITE_JTM_GROUP" 770
done

setup_dir "$SITE_JTM_SCRATCH_DIR" "$SITE_JTM_GROUP" 775
setup_dir "$SITE_UPLOADS_DIR" "$SITE_JTM_GROUP" 777

## STOP SERVICE
test -f $SUPERVISOR_DIR/supervisord-jaws.conf && $SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jaws.conf stop jaws-$DEPLOYMENT_NAME:*

## WRITE CONFIG FILE
cat << EOM > $CONFIG_DIR/jaws-site.conf
[DB]
dialect = mysql+mysqlconnector
host = $SITE_DB_HOST
port = $SITE_DB_PORT
user = jaws
password = $SITE_DB_PW
db = jaws_${JAWS_SITE,,}_$DEPLOYMENT_NAME
[LOCAL_RPC_SERVER]
user = jaws
password = $SITE_RMQ_PW
host = $SITE_RMQ_HOST
port = $SITE_RMQ_PORT
vhost = jaws_$DEPLOYMENT_NAME
queue = SITE_$JAWS_SITE
num_threads = 5
max_retries = 3
[CENTRAL_RPC_SERVER]
user = jaws
password = $JAWS_CENTRAL_RMQ_PW
host = $JAWS_CENTRAL_RMQ_HOST
port = $JAWS_CENTRAL_RMQ_PORT
vhost = jaws_$DEPLOYMENT_NAME
queue = JAWS_$JAWS_SITE
num_threads = 5
max_retries = 3
[CENTRAL_RPC_CLIENT]
user = jaws
password = $JAWS_CENTRAL_RMQ_PW
host = $JAWS_CENTRAL_RMQ_HOST
port = $JAWS_CENTRAL_RMQ_PORT
vhost = jaws_$DEPLOYMENT_NAME
queue = CENTRAL
[GLOBUS]
client_id = $JAWS_GLOBUS_CLIENT_ID
endpoint_id = $SITE_GLOBUS_EP
root_dir = $SITE_GLOBUS_ROOT_DIR
default_dir = $SITE_GLOBUS_DEFAULT_DIR
[SITE]
id = $JAWS_SITE
uploads_subdirectory = $SITE_UPLOADS_SUBDIR
downloads_subdirectory = $SITE_DOWNLOADS_SUBDIR
[CROMWELL]
url = http://localhost:$CROMWELL_PORT
EOM
chgrp "$SITE_JAWS_GROUP" "$CONFIG_DIR/jaws-site.conf"
chmod 660 "$CONFIG_DIR/jaws-site.conf"


## WRITE SHIM SCRIPTS

# If the DEPLOY-CLIENT flag is set, the deploy-client script will be run, but the files must have group and permissions set.
# Unfortunately, chgrp/chmod don't work on the parallel-fs when executed by the gitlab-runner for some reason; the
# solution is to have the jaws user perform these commands in one of the shims (under supervsiord), so it's executed before one
# of the required services is executed.  This is a hack.
# TODO CHECK IF CLIENT NFS INSTALL DIR EXISTS AND FIX PERMS IF SO
FIX_PERMS_CLIENT=""
[[ -n "$DEPLOY_JAWS_CLIENT" ]] && [[ "$DEPLOY_JAWS_CLIENT" -eq 1 ]] && FIX_PERMS_CLIENT="fix_perms $SITE_CLIENT_GROUP $SITE_CLIENT_INSTALL_DIR"

# write shims
cat <<EOM > $SHIM_DIR/jaws-site-daemon-$DEPLOYMENT_NAME
#!/usr/bin/env bash

function fix_perms() {
    local GROUP="\$1"
    local DIR="\$2"
    chmod -R a+rX "\$DIR"
    chmod -R ug+rwX "\$DIR"
    chgrp -R "\$GROUP" "\$DIR"
    find "\$DIR" -type d -exec chmod g+s '{}' \;
}

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export PYTHONIOENCODING=utf-8

test -d "$SITE_JAWS_SCRATCH_DIR" || mkdir "$SITE_JAWS_SCRATCH_DIR"
chmod 775 "$SITE_JAWS_SCRATCH_DIR"
test -d "$SITE_DOWNLOADS_DIR" || mkdir "$SITE_DOWNLOADS_DIR"
chmod 775 "$SITE_DOWNLOADS_DIR"

$FIX_PERMS_CLIENT

source "$INSTALL_DIR/site/bin/activate"
exec jaws-site --log "$LOGS_DIR/site-daemon.log" --config "$CONFIG_DIR/jaws-site.conf" --log-level "$LOG_LEVEL" daemon
EOM
chmod 770 "$SHIM_DIR/jaws-site-daemon-$DEPLOYMENT_NAME"

cat <<EOM > "$SHIM_DIR/jaws-site-central-rpc-$DEPLOYMENT_NAME"
#!/usr/bin/env bash

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export PYTHONIOENCODING=utf-8

# START RPC SERVER
source "$INSTALL_DIR/site/bin/activate"
exec jaws-site --log "$LOGS_DIR/site-central-rpc.log" --config "$CONFIG_DIR/jaws-site.conf" --log-level "$LOG_LEVEL" central-rpc
EOM
chmod 770 "$SHIM_DIR/jaws-site-central-rpc-$DEPLOYMENT_NAME"

cat <<EOM > "$SHIM_DIR/jaws-site-jtm-rpc-$DEPLOYMENT_NAME"
#!/usr/bin/env bash

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export PYTHONIOENCODING=utf-8

source $INSTALL_DIR/site/bin/activate
exec jaws-site --log $LOGS_DIR/site-jtm-rpc.log --config $CONFIG_DIR/jaws-site.conf --log-level DEBUG jtm-rpc
EOM
chmod 770 "$SHIM_DIR/jaws-site-jtm-rpc-$DEPLOYMENT_NAME"


## GENERATE VENVS
rm -rf ./site/dist/* ./rpc/dist/*
test -d "$INSTALL_DIR/site" && rm -rf "$INSTALL_DIR/site"
$SITE_LOAD_PYTHON
make pkg-rpc
make pkg-site
$SITE_PYTHON -m venv "$INSTALL_DIR/site" && \
  . "$INSTALL_DIR/site/bin/activate" && \
  $SITE_PYTHON_PIP install rpc/dist/* && \
  $SITE_PYTHON_PIP install site/dist/* && \
  deactivate
fix_perms $SITE_JAWS_GROUP "$INSTALL_DIR/site"


## STOP SERVICE
test -f $SUPERVISOR_DIR/supervisord-jaws.conf && $SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jaws.conf start jaws-$DEPLOYMENT_NAME:*

echo "END deploy-site"
