#!/usr/bin/env bash

# This script will deploy the supervisord for services run at each computing site as the "jaws" user:
# - jaws-site

set -e

function fix_perms() {
    local GROUP=$1
    local DIR="$2"
    chmod -R a+rX "$DIR"
    chmod -R ug+rwX "$DIR"
    chgrp -R $GROUP "$DIR"
    find "$DIR" -type d -exec chmod g+s '{}' \;
}

echo "BEGIN deploy-supervisor"

source ./test/integration/define-env

## VERIFY REQUIRED VARS ARE DEFINED
# If any env are undefined, try sourcing the setup script and check again.
# Exits if any required var is undefined.
REQUIRED_VARS="
CONFIG_DIR
CROMWELL_PORT
DEPLOYMENT_NAME
SUPERVISOR_DIR
JAWS_CENTRAL_RMQ_HOST
JAWS_CENTRAL_RMQ_PORT
JAWS_CENTRAL_RMQ_PW
JAWS_GLOBUS_CLIENT_ID
JAWS_SITE
SITE_CLUSTER_ACCOUNT
SITE_CLUSTER_CONSTRAINT
SITE_CLUSTER_PARTITION
SITE_CLUSTER_QOS
SITE_DB_HOST
SITE_DB_PORT
SITE_DB_PW
SITE_DOWNLOADS_SUBDIR
SITE_GLOBUS_DEFAULT_DIR
SITE_GLOBUS_EP
SITE_GLOBUS_ROOT_DIR
SITE_JAWS_GROUP
SITE_JTM_GROUP
SITE_JTM_SCRATCH_DIR
SITE_JTM_WORKER_INSTALL_DIR
SITE_RMQ_HOST
SITE_RMQ_PORT
SITE_RMQ_PW
SITE_UPLOADS_SUBDIR
"
RESULT=0
for VAR in $REQUIRED_VARS; do
  if [ -z ${!VAR+xxx} ]; then
    echo "Missing env var, $VAR; sourcing setup script..."
    source ./test/integration/define-env
    RESULT=1
    break
  fi
done
if [[ $RESULT -ne 0 ]]; then
  RESULT=0
  for VAR in $REQUIRED_VARS; do
    if [ -z ${!VAR+xxx} ]; then
      echo "Missing env var: $VAR">&2
      RESULT=1
    fi
  done
fi
[ $RESULT -eq 0 ] || exit 1

echo "DEFINING PATHS"
export INSTALL_DIR="$SITE_INSTALL_BASEDIR/jaws-$DEPLOYMENT_NAME"
export CONFIG_DIR="$INSTALL_DIR/configs"
export SHIM_DIR="$INSTALL_DIR/shims"
export LOGS_DIR="$INSTALL_DIR/logs"
export SUPERVISOR_DIR="$SITE_INSTALL_BASEDIR/jaws-supervisord-$DEPLOYMENT_NAME"

echo "DEFINING SITE VARS"
function set_site_var {
  VAR_NAME="$1"
  SRC_VAR_NAME="${JAWS_SITE}_${VAR_NAME}"
  if [ -z ${!SRC_VAR_NAME+xxx} ]; then
    echo "Missing env var: $SRC_VAR_NAME">&2
    exit 1
  fi
  SITE_VAR_NAME="SITE_${VAR_NAME}"
  VALUE="${!SRC_VAR_NAME}"
  echo "... $SITE_VAR_NAME"
  export $SITE_VAR_NAME
  printf -v "$SITE_VAR_NAME" "%s" "$VALUE"
}
SITE_VARS="
JAWS_GROUP
JTM_GROUP
INSTALL_BASEDIR
PYTHON
LOAD_PYTHON
JAWS_SCRATCH_BASEDIR
JTM_SCRATCH_BASEDIR
JAWS_SW_BASEDIR
JTM_SW_BASEDIR
REF_DATA_DIR
SUPERVISOR_HOST"
for SITE_VAR in $SITE_VARS; do
  set_site_var $SITE_VAR
done


## STOP SERVICES
test -f $SUPERVISOR_DIR/supervisord-jaws.conf && $SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jaws.conf stop jaws-$DEPLOYMENT_NAME:*


## SUPERVISORD
test -d $SUPERVISOR_DIR || mkdir $SUPERVISOR_DIR
chgrp $SITE_JTM_GROUP $SUPERVISOR_DIR
chmod 770 $SUPERVISOR_DIR
$SITE_LOAD_PYTHON
[[ -d $SUPERVISOR_DIR/bin ]] || mkdir $SUPERVISOR_DIR/bin
[[ -f $SUPERVISOR_DIR/venv/bin/activate ]] || $SITE_PYTHON -m venv $SUPERVISOR_DIR/venv
chgrp -R $SITE_JTM_GROUP $SUPERVISOR_DIR/{bin,venv}
source $SUPERVISOR_DIR/venv/bin/activate

function not_available() {
  command -v $1 >/dev/null 2>&1
}

not_available "supervisord" || $SITE_PYTHON_PIP install supervisor

function generate_shim() {
prog=$1
cat <<EOM > $SUPERVISOR_DIR/bin/$prog
#!/usr/bin/env bash

source $SUPERVISOR_DIR/venv/bin/activate

$prog \$@
EOM
chmod +x $SUPERVISOR_DIR/bin/$prog
}

generate_shim supervisord
generate_shim supervisorctl

fix_perms "$SITE_JTM_GROUP" "$SUPERVISOR_DIR"

cat << EOM > $SUPERVISOR_DIR/supervisord-jaws.conf
[inet_http_server]
port=0.0.0.0:$JAWS_SUPERVISOR_PORT
username=jaws
password=$JAWS_SUPERVISORD_PW

[supervisord]
logfile=$SUPERVISOR_DIR/jaws-log
logfile_maxbytes=50MB
logfile_backups=2
loglevel=info
pidfile=$SUPERVISOR_DIR/jaws-pidfile
nodaemon=false
minfds=1024
minprocs=200
identifier=supervisor-jaws-$DEPLOYMENT_NAME
directory=$SUPERVISOR_DIR

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=$SITE_SUPERVISOR_HOST:$JAWS_SUPERVISOR_PORT
username=jaws
password=$JAWS_SUPERVISORD_PW
prompt=supervisor-jaws-$DEPLOYMENT_NAME

;----- Program Section

[program:site-daemon]
command=$SHIM_DIR/jaws-site-daemon-$DEPLOYMENT_NAME
numprocs=1
startsecs=3
startretries=3
autorestart=unexpected

[program:site-jtm-rpc]
command=$SHIM_DIR/jaws-site-jtm-rpc-$DEPLOYMENT_NAME
numprocs=1
startsecs=3
startretries=3
autorestart=unexpected

[program:site-central-rpc]
command=$SHIM_DIR/jaws-site-central-rpc-$DEPLOYMENT_NAME
numprocs=1
startsecs=3
startretries=3
autorestart=unexpected

[group:jaws-$DEPLOYMENT_NAME]
programs=site-daemon,site-jtm-rpc,site-central-rpc
priority=999
EOM


## JTM SUPERVISOR CONF

cat << EOM > $SUPERVISOR_DIR/supervisord-jtm.conf
[inet_http_server]
port=0.0.0.0:$JTM_SUPERVISOR_PORT
username=jaws
password=$JAWS_SUPERVISORD_PW

[supervisord]
logfile=$SUPERVISOR_DIR/jtm-log
logfile_maxbytes=50MB
logfile_backups=2
loglevel=info
pidfile=$SUPERVISOR_DIR/jtm-pidfile
nodaemon=false
minfds=1024
minprocs=200
identifier=supervisor-jtm-$DEPLOYMENT_NAME
directory=$SUPERVISOR_DIR

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=$SITE_SUPERVISOR_HOST:$JTM_SUPERVISOR_PORT
username=jaws
password=$JAWS_SUPERVISORD_PW
prompt=supervisor-jtm-$DEPLOYMENT_NAME

;----- Program Section

[program:jtm]
command=$SHIM_DIR/jaws-jtm-$DEPLOYMENT_NAME
numprocs=1
startsecs=3
startretries=3
autorestart=unexpected

[program:cromwell]
command=$SHIM_DIR/jaws-cromwell-$DEPLOYMENT_NAME
numprocs=1
startsecs=10
startretries=3
autorestart=unexpected

[group:jtm-$DEPLOYMENT_NAME]
programs=jtm,cromwell
priority=999
EOM

chgrp "$SITE_JAWS_GROUP" "$SUPERVISOR_DIR/supervisord-jaws.conf"
chmod 660 "$SUPERVISOR_DIR/supervisord-jaws.conf"
chgrp "$SITE_JTM_GROUP" "$SUPERVISOR_DIR/supervisord-jtm.conf"
chmod 660 "$SUPERVISOR_DIR/supervisord-jtm.conf"

printf "END deploy-supervisord\n\n"


## start services
$SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jaws.conf reread
$SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jaws.conf start jaws-$DEPLOYMENT_NAME:*
$SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jtm.conf reread
$SUPERVISOR_DIR/bin/supervisorctl -c $SUPERVISOR_DIR/supervisord-jtm.conf start jaws-$DEPLOYMENT_NAME:*
echo "END deploy-supervisor"
