#!/usr/bin/env bash

# This script defines variables constructed from other variables, in order to
# keep the number of configured variables to a minimum, and to
# keep the variable definitions largely in one place.
# Deployment scripts shall source this file.


## VALIDATE INPUT VARS
## print list of all missing vars (instead of exiting on first undefined var)
## exit with 1 if any vars are missing; 0 otherwise
REQUIRED_VARS="
DEPLOYMENT_NAME
JAWS_VERSION
JAWS_DOCS_URL
JAWS_CENTRAL_HOST
JAWS_CENTRAL_RMQ_HOST
JAWS_CENTRAL_RMQ_PORT
JAWS_GLOBUS_CLIENT_ID
CROMWELL_VERSION
"
RESULT=0
echo "VALIDATING REQUIRED VARS"
for VAR in $REQUIRED_VARS; do
  if [[ -z ${!VAR} ]]; then
    echo "Missing env var: $VAR">&2
    RESULT=1
  fi
  echo "... $VAR : OK"
done
[ $RESULT -eq 0 ] || exit $RESULT


## DEPLOYMENT-SPECIFIC VARIABLES
echo "DEFINING DEPLOYMENT VARS"
function set_deployment_var {
  VAR_NAME="$1"
  SRC_VAR_NAME="${DEPLOYMENT_NAME}_${VAR_NAME}"
  if [ -z ${!SRC_VAR_NAME+xxx} ]; then
    echo "Missing env var: $SRC_VAR_NAME">&2
    exit 1
  fi
  VALUE="${!SRC_VAR_NAME}"
  echo "... $VAR_NAME"
  export $VAR_NAME
  printf -v "$VAR_NAME" "%s" "$VALUE"
}
DEPLOYMENT_VARS="
LOG_LEVEL
JAWS_SUPERVISOR_PORT
JTM_SUPERVISOR_PORT
JAWS_AUTH_PORT
JAWS_REST_PORT
CROMWELL_PORT"
for DEPLOYMENT_VAR in $DEPLOYMENT_VARS; do
  set_deployment_var $DEPLOYMENT_VAR
done


## SITE-SPECIFIC VARIABLES:
## This will define global vars with a SITE_ prefix, with values from variables referenced by the JAWS_SITE
## variable.  For instance, if JAWS_SITE="JGI", setting GLOBUS_EP site var will define a SITE_GLOBUS_EP var
## with the value from JGI_GLOBUS_EP.  
## This allows the site installation scripts to use the SITE_* vars.
echo "DEFINING SITE VARS"
function set_site_var {
  VAR_NAME="$1"
  SRC_VAR_NAME="${JAWS_SITE}_${VAR_NAME}"
  if [ -z ${!SRC_VAR_NAME+xxx} ]; then
    echo "Missing env var: $SRC_VAR_NAME">&2
    exit 1
  fi
  SITE_VAR_NAME="SITE_${VAR_NAME}"
  VALUE="${!SRC_VAR_NAME}"
  echo "... $SITE_VAR_NAME"
  export $SITE_VAR_NAME
  printf -v "$SITE_VAR_NAME" "%s" "$VALUE"
}
SITE_VARS="
INSTALL_BASEDIR
GLOBUS_EP
GLOBUS_ROOT_DIR
GLOBUS_DEFAULT_DIR
RMQ_HOST
RMQ_PORT
PYTHON
PYTHON_PIP
LOAD_PYTHON
JAWS_GROUP
JTM_GROUP
CLIENT_GROUP
JAWS_SCRATCH_BASEDIR
JTM_SCRATCH_BASEDIR
JAWS_SW_BASEDIR
JTM_SW_BASEDIR
REF_DATA_DIR
SUPERVISOR_HOST
CONTAINER_TYPE
DB_HOST
DB_PORT
CLUSTER_QOS
CLUSTER_PARTITION
CLUSTER_ACCOUNT
CLUSTER_CONSTRAINT
MAX_RAM_GB
RMQ_PW
DB_PW
LOAD_JAVA"
for SITE_VAR in $SITE_VARS; do
  set_site_var $SITE_VAR
done


## DEFINE VARS FROM OTHER VARS
echo "DEFINING PATHS"
export INSTALL_DIR="$SITE_INSTALL_BASEDIR/jaws-$DEPLOYMENT_NAME"
export CONFIG_DIR="$INSTALL_DIR/configs"
export SHIM_DIR="$INSTALL_DIR/shims"
export LOGS_DIR="$INSTALL_DIR/logs"
export SUPERVISOR_DIR="$SITE_INSTALL_BASEDIR/jaws-supervisord-$DEPLOYMENT_NAME"

# Site paths:
export SITE_CLIENT_INSTALL_DIR="$SITE_JAWS_SW_BASEDIR/jaws-$DEPLOYMENT_NAME"
export SITE_JAWS_SCRATCH_DIR="$SITE_JAWS_SCRATCH_BASEDIR/jaws-$DEPLOYMENT_NAME"
export SITE_JTM_SCRATCH_DIR="$SITE_JTM_SCRATCH_BASEDIR/jaws-$DEPLOYMENT_NAME"
export SITE_JTM_WORKER_INSTALL_DIR="$SITE_JTM_SW_BASEDIR/jtm-$DEPLOYMENT_NAME"

# Globus-related dirs:
export SITE_CROMWELL_TMPDIR="$INSTALL_DIR/cromwell-tmp"
export SITE_UPLOADS_DIR="$SITE_JTM_SCRATCH_DIR/uploads"
export SITE_DOWNLOADS_DIR="$SITE_JAWS_SCRATCH_DIR/downloads"

# Cromwell-related dirs
export SITE_CROMWELL_JAR="$SITE_JAWS_SW_BASEDIR/cromwell/cromwell-$CROMWELL_VERSION.jar"
export SITE_WOMTOOL_JAR="$SITE_JAWS_SW_BASEDIR/cromwell/womtool-$CROMWELL_VERSION.jar"
export SITE_CONTAINERS_DIR="$SITE_JTM_SCRATCH_BASEDIR/${SITE_CONTAINER_TYPE}_files"
export CROMWELL_TMPDIR="$INSTALL_DIR/cromwell-tmp"
export CROMWELL_WORKFLOW_LOGS_DIR="$LOGS_DIR/cromwell-workflow-logs"
export CROMWELL_EXECUTIONS_DIR="$SITE_JTM_SCRATCH_DIR/cromwell-executions"
export JTM_CONFIG_FILE="$SITE_JTM_WORKER_INSTALL_DIR/jaws-jtm.conf"
export INSTALLED_CROMWELL_JAR="$INSTALL_DIR/cromwell.jar"

# Globus has some rules about how paths are interpreted, depending on how the endpoint is configured.
[[ ${SITE_GLOBUS_ROOT_DIR: -1} == "/" ]] || SITE_GLOBUS_ROOT_DIR="$SITE_GLOBUS_ROOT_DIR/"
if [[ $SITE_GLOBUS_ROOT_DIR == "/" ]]; then
  export SITE_UPLOADS_SUBDIR=$SITE_UPLOADS_DIR
  export SITE_DOWNLOADS_SUBDIR=$SITE_DOWNLOADS_DIR
else
  export SITE_UPLOADS_SUBDIR=${SITE_UPLOADS_DIR#$SITE_GLOBUS_ROOT_DIR}
  export SITE_DOWNLOADS_SUBDIR=${SITE_DOWNLOADS_DIR#$SITE_GLOBUS_ROOT_DIR}
fi


## CREATE DIRS AND SET GROUP AND PERMISSIONS
## - there are expected to be "jaws" and "jtm" users
## - "jaws" user belongs to "jaws" and "jtm" groups
## - "jtm" user belongs to "jtm" group and no others for security purposes
## - users don't belong to either "jaws" or "jtm" groups (protected)
function setup_dir {
  local DIR="$1"
  local GROUP="$2"
  local PERMS="$3"
  [[ -z $DIR ]] && echo "missing DIR" && exit 1
  [[ -z $GROUP ]] && echo "missing GROUP" && exit 1
  echo "... $DIR"
  test -d "$DIR" || mkdir -p "$DIR"
  chgrp "$GROUP" "$DIR"
  chmod "$PERMS" "$DIR"
}
echo "CREATING PATHS"
INSTALL_DIRS="
INSTALL_DIR
CONFIG_DIR
SHIM_DIR
LOGS_DIR
SUPERVISOR_DIR
SITE_CONTAINERS_DIR
SITE_JAWS_SCRATCH_DIR
SITE_JTM_WORKER_INSTALL_DIR
SITE_CROMWELL_TMPDIR
CROMWELL_TMPDIR
CROMWELL_WORKFLOW_LOGS_DIR
"
for DIR in $INSTALL_DIRS; do
  setup_dir "${!DIR}" "$SITE_JTM_GROUP" 770
done

setup_dir "$SITE_JTM_SCRATCH_DIR" "$SITE_JTM_GROUP" 775
setup_dir "$SITE_UPLOADS_DIR" "$SITE_JTM_GROUP" 777
setup_dir "$SITE_JTM_WORKER_INSTALL_DIR" "$SITE_JTM_GROUP" 770

setup_dir "$CROMWELL_EXECUTIONS_DIR" "$SITE_JTM_GROUP" 775
