# Here are some useful steps for pytest development.

###################################################
### Developing & testing a single pytest script ###
###################################################
# for pytest level test, running as yourself
cd <your-repo>/jaws/test/integration/end-to-end-tests

# this should load env for jaws and pytest
source /global/cfs/projectdirs/jaws/jaws-dev/jaws-dev.sh

# run pytest on a single test script
pytest --verbose --dir single-test --site cori single-test/test_jaws_cmds.py

####################################################
### Test the pytest wrapper. Run as 'jaws' user. ###
####################################################
ssh cori20
collabsu jaws

# for pytest_wrapper.py level test
deactivate any venv
cd <your-repo>/jaws

# This wrapper is usually run by .gitlab-ci.yml as jaws user.
# It takes one argument, the directory that contains the pytests to run.
source ./setEnv.sh # this env simulates what .gitlab-ci.yml does when you do a merge.
test/integration/end-to-end-tests/pytest_wrapper.sh single-test


# You can also run pytests directly:
source ~/jaws-dev.sh  # use prod or staging dir as desired.
pytest --capture=no --verbose --site cori --dir . <test.py>

- the dir argument points to the root dir where the "WDL" and "test-inputs" are.
