stages:
  - unit-test
  - package
  - deploy-jaws
  - integration-test
  - .post

variables:
  GIT_STRATEGY: clone

  ## GLOBAL INSTALL VARIABLES:
  JAWS_SITES: "CORI JGI"  # TODO CASCADE
  JAWS_VERSION: "2.0.1"
  JAWS_DOCS_URL: "https://jaws-docs.readthedocs.io/en/latest/"
  JAWS_CENTRAL_HOST: "http://cori20.nersc.gov"
  JAWS_CENTRAL_RMQ_HOST: "rmq.lbl.gov"
  JAWS_CENTRAL_RMQ_PORT: 5672
  JAWS_GLOBUS_CLIENT_ID: "29a47d96-76b4-4f2b-a8bb-a4cb38ea17e3"
  CROMWELL_VERSION: "52"

  ## CENTRAL-SPECIFIC VARIABLES:
  JAWS_CENTRAL_DB_HOST: "jaws-db.lbl.gov"
  JAWS_CENTRAL_DB_PORT: 3306

  ## DEPLOYMENT-SPECIFIC VARIABLES:
  dev_LOG_LEVEL: "DEBUG"
  dev_JAWS_SUPERVISOR_PORT: 64101
  dev_CROMWELL_SUPERVISOR_PORT: 64111
  dev_JAWS_AUTH_PORT: 3001
  dev_JAWS_REST_PORT: 5001
  dev_CROMWELL_PORT: 50101
  staging_LOG_LEVEL: "DEBUG"
  staging_JAWS_SUPERVISOR_PORT: 64102
  staging_CROMWELL_SUPERVISOR_PORT: 64112
  staging_JAWS_AUTH_PORT: 3002
  staging_JAWS_REST_PORT: 5002
  staging_CROMWELL_PORT: 50102
  prod_LOG_LEVEL: "INFO"
  prod_JAWS_SUPERVISOR_PORT: 64103
  prod_CROMWELL_SUPERVISOR_PORT: 64113
  prod_JAWS_AUTH_PORT: 3003
  prod_JAWS_REST_PORT: 5003
  prod_CROMWELL_PORT: 50103

  ## SITE-SPECIFIC VARIABLES:
  CORI_INSTALL_BASEDIR: "/tmp"
  CORI_GLOBUS_EP: "9d6d994a-6d04-11e5-ba46-22000b92c6ec"
  CORI_GLOBUS_ROOT_DIR: "/"
  CORI_GLOBUS_DEFAULT_DIR: "~"
  CORI_RMQ_HOST: "rmq.lbl.gov"
  CORI_RMQ_PORT: 5672
  CORI_PYTHON: "python3"
  CORI_PYTHON_PIP: "pip3"
  CORI_LOAD_PYTHON: "module load python"
  CORI_JAWS_GROUP: "jaws"
  CORI_CROMWELL_GROUP: "jaws_jtm"
  CORI_CLIENT_GROUP: "genome"
  CORI_JAWS_SCRATCH_BASEDIR: "/global/cscratch1/sd/jaws"
  CORI_CROMWELL_SCRATCH_BASEDIR: "/global/cscratch1/sd/jaws_jtm"
  CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  CORI_WORKER_SW_BASEDIR: "/global/cfs/projectdirs/jaws_jtm"
  CORI_REF_DATA_DIR: "/global/cscratch1/sd/jaws/refdata"
  CORI_SUPERVISOR_HOST: "http://cori20.nersc.gov"
  CORI_CONTAINER_TYPE: "shifter"
  CORI_DB_HOST: "db.mysql.prod-cattle.stable.spin.nersc.org"
  CORI_DB_PORT: 60006
  CORI_CLUSTER_QOS: "genepool_special"
  CORI_CLUSTER_PARTITION: ""
  CORI_CLUSTER_ACCOUNT: "fungalp"
  CORI_CLUSTER_CONSTRAINT: "haswell"
  CORI_MAX_RAM_GB: 2048
  CORI_LOAD_JAVA: ""

  JGI_INSTALL_BASEDIR: "/tmp"
  JGI_GLOBUS_EP: "b445e71a-4933-11ea-9714-021304b0cca7"
  JGI_GLOBUS_ROOT_DIR: "/global/scratch/jaws/"
  JGI_GLOBUS_DEFAULT_DIR: "/global/scratch/jaws/"
  JGI_RMQ_HOST: "rmq.lbl.gov"
  JGI_RMQ_PORT: 5672
  JGI_PYTHON: "python"
  JGI_PYTHON_PIP: "pip"
  JGI_LOAD_PYTHON: "module load python"
  JGI_JAWS_GROUP: "jaws"
  JGI_CROMWELL_GROUP: "jaws"
  JGI_CLIENT_GROUP: "jgi"
  JGI_JAWS_SCRATCH_BASEDIR: "/global/scratch/jaws"
  JGI_CROMWELL_SCRATCH_BASEDIR: "/global/scratch/jaws"
  JGI_JAWS_SW_BASEDIR: "/global/home/groups-sw/lr_jgicloud"
  JGI_WORKER_SW_BASEDIR: "/global/home/groups-sw/lr_jgicloud"
  JGI_REF_DATA_DIR: "/global/scratch/jaws/refdata"
  JGI_SUPERVISOR_HOST: "http://lrc-services.lbl.gov"
  JGI_CONTAINER_TYPE: "singularity"
  JGI_DB_HOST: "jaws-db.lbl.gov"
  JGI_DB_PORT: 3306
  JGI_CLUSTER_QOS: "condo_jgicloud"
  JGI_CLUSTER_PARTITION: "lr3"
  JGI_CLUSTER_ACCOUNT: "lr_jgicloud"
  JGI_CLUSTER_CONSTRAINT: ""
  JGI_MAX_RAM_GB: 1024
  JGI_LOAD_JAVA: "module load java"

  CASCADE_LOAD_PYTHON: "source /opt/rh/rh-python36/enable"
  CASCADE_PYTHON: "python3.6"
  CASCADE_PYTHON_PIP: "pip3"
  CASCADE_CROMWELL_GROUP: "svc-jtm-user"
  CASCADE_JAWS_SW_BASEDIR: "/dtemp/mscjgi"
  CASCADE_WORKER_SW_BASEDIR: "/dtemp/mscjgi"
  # TODO

# this needs to be commented out in the jobs definitions, for the jobs to
# run in any case and not only when pushing a merge request.
.only-default: &only-default
  only:
    - master
    - branches
    - merge_requests
    - tags

test-rpc:
  <<: *only-default
  stage: unit-test
  script:
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install -r rpc/requirements.txt
    - pip install flake8
    - pip install pytest
    - make test-rpc
test-site:
  <<: *only-default
  stage: unit-test
  script:
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install rpc/
    - pip install -r site/requirements.txt
    - pip install flake8
    - pip install pytest
    - make test-site
test-central:
  <<: *only-default
  stage: unit-test
  script:
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install rpc/
    - pip install -r central/requirements.txt
    - pip install flake8
    - pip install pytest
    - make test-central
test-client:
  <<: *only-default
  stage: unit-test
  script:
    - export PATH=/jaws-ci/bin:$PATH
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install -r client/requirements.txt
    - pip install flake8
    - pip install pytest
    - make test-client
test-worker:
  <<: *only-default
  stage: unit-test
  script:
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install rpc/
    - pip install -r worker/requirements.txt
    - pip install flake8
    - pip install pytest
    - make test-worker-
package:
  <<: *only-default
  stage: package
  script:
    - python3 -m venv pkg-venv
    - source pkg-venv/bin/activate
    - pip install wheel
    - make pkg
  artifacts:
    name: "packages-$CI_PROJECT_NAME-$CI_PIPELINE_ID"
    expire_in: 1 hour
    paths:
      - rpc/dist
      - site/dist
      - client/dist
      - central/dist
      - worker/dist
## integration tests - only run on merge request
deploy-jaws-cori-dev:
  stage: deploy-jaws
  tags:
    - cori
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "CORI"
    DEPLOY_JAWS_CENTRAL: 1
    DEPLOY_JAWS_CLIENT: 1
  script:
    - ./test/integration/deploy-jaws
  only:
  - dev
deploy-jaws-cori-staging:
  stage: deploy-jaws
  tags:
    - cori
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "CORI"
    DEPLOY_JAWS_CENTRAL: 1
    DEPLOY_JAWS_CLIENT: 1
  script:
    - ./test/integration/deploy-jaws
  only:
  - staging
deploy-jaws-cori-prod:
  stage: deploy-jaws
  tags:
    - cori
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "CORI"
    DEPLOY_JAWS_CENTRAL: 1
    DEPLOY_JAWS_CLIENT: 1
  script:
    - ./test/integration/deploy-jaws
  only:
  - master

deploy-jaws-jgi-dev:
  stage: deploy-jaws
  tags:
    - jgi
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "JGI"
  script:
    - ./test/integration/deploy-jaws
  only:
  - dev
deploy-jaws-jgi-staging:
  stage: deploy-jaws
  tags:
    - jgi
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "JGI"
  script:
    - ./test/integration/deploy-jaws
  only:
  - staging
deploy-jaws-jgi-prod:
  stage: deploy-jaws
  tags:
    - jgi
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "JGI"
  script:
    - ./test/integration/deploy-jaws
  only:
  - master

deploy-jaws-cascade:
  stage: deploy-jaws
  tags:
    - cascade
  script:
    ## configs first, to be able to talk to supervisord
    - export LC_ALL=en_US.UTF-8
    - export LANG=en_US.UTF-8
    - export PYTHONIOENCODING=utf-8
    - source /opt/rh/rh-python36/enable
    - test -d /tmp/jaws-dev/ || mkdir /tmp/jaws-dev/
    - test -d /tmp/jaws-dev/configs || mkdir /tmp/jaws-dev/configs
    - test -d /tmp/jaws-dev/logs || mkdir /tmp/jaws-dev/logs && test -d /tmp/jaws-dev/logs/jtm || mkdir /tmp/jaws-dev/logs/jtm && chgrp svc-jtm-user /tmp/jaws-dev/logs/jtm && chmod 770 /tmp/jaws-dev/logs/jtm
    - chgrp svc-jtm-user /tmp/jaws-dev/ && chmod 770 /tmp/jaws-dev/
    - chgrp svc-jtm-user /tmp/jaws-dev/configs && chmod 770 /tmp/jaws-dev/configs
    - chgrp svc-jtm-user /tmp/jaws-dev/logs && chmod 770 /tmp/jaws-dev/logs
    - chgrp svc-jtm-user /tmp/jaws-dev/logs/jtm && chmod 770 /tmp/jaws-dev/logs/jtm
    - chgrp svc-jtm-user /tmp/jaws-dev/shims && chmod 770 /tmp/jaws-dev/shims
    - ./test/integration/pnnl/generate-configs /tmp/jaws-dev/configs/
    - chmod 660 /tmp/jaws-dev/configs/*
    - chgrp svc-jtm-user /tmp/jaws-dev/configs/jaws-jtm.conf && chmod 660 /tmp/jaws-dev/configs/jaws-jtm.conf
    - chgrp svc-jtm-user /tmp/jaws-dev/configs/cromwell.conf && chmod 660 /tmp/jaws-dev/configs/cromwell.conf
    - chgrp svc-jtm-user /tmp/jaws-supervisord/supervisord-jtm.conf && chmod 660 /tmp/jaws-supervisord/supervisord-jtm.conf
    - ./test/integration/pnnl/deploy-supervisord /tmp/jaws-supervisord/ /tmp/jaws-dev/shims/
    - chgrp svc-jtm-user /tmp/jaws-supervisord/ && chgrp -R svc-jtm-user /tmp/jaws-supervisord/{bin,venv}
    - ./test/integration/pnnl/generate-shims /tmp/jaws-dev/
    - chgrp svc-jtm-user /tmp/jaws-dev/shims/jaws-jtm-dev && chmod 770 /tmp/jaws-dev/shims/jaws-jtm-dev
    - chgrp svc-jtm-user /tmp/jaws-dev/shims/jaws-cromwell-dev && chmod 770 /tmp/jaws-dev/shims/jaws-cromwell-dev
    - make pkg
    ## stop jaws and install new versions
    - /tmp/jaws-supervisord/bin/supervisorctl -c /tmp/jaws-supervisord/supervisord-jaws.conf stop jaws-dev:*
    - rm -rf /tmp/jaws-dev/client && python3.6 -m venv /tmp/jaws-dev/client  && . /tmp/jaws-dev/client/bin/activate  && pip3 install client/dist/*  && deactivate
    - rm -rf /tmp/jaws-dev/site && python3.6 -m venv /tmp/jaws-dev/site    && . /tmp/jaws-dev/site/bin/activate    && pip3 install rpc/dist/* && pip install site/dist/*    && deactivate
    - /tmp/jaws-supervisord/bin/supervisorctl -c /tmp/jaws-supervisord/supervisord-jaws.conf reread
    ## start jaws
    - /tmp/jaws-supervisord/bin/supervisorctl -c /tmp/jaws-supervisord/supervisord-jaws.conf start jaws-dev:*
    ## stop jtm and cromwell and install new versions
    - rm -rf /tmp/jaws-dev/jtm && python3.6 -m venv /tmp/jaws-dev/jtm     && . /tmp/jaws-dev/jtm/bin/activate     && pip3 install rpc/dist/* && pip install jtm/dist/*     && deactivate && chmod -R g+rx,o+rx /tmp/jaws-dev/jtm || true
    - wget -q -O /tmp/jaws-dev/cromwell.jar https://github.com/broadinstitute/cromwell/releases/download/52/cromwell-52.jar && chgrp svc-jtm-user /tmp/jaws-dev/cromwell.jar
    - /tmp/jaws-supervisord/bin/supervisorctl -c /tmp/jaws-supervisord/supervisord-jtm.conf stop jaws-dev:*
    - /tmp/jaws-supervisord/bin/supervisorctl -c /tmp/jaws-supervisord/supervisord-jtm.conf reread
    - /tmp/jaws-supervisord/bin/supervisorctl -c /tmp/jaws-supervisord/supervisord-jtm.conf start jaws-dev:*
    ## start jtm
    - mkdir -p /dtemp/mscjgi/jaws-dev/jtm || true
    - rm -rf /dtemp/mscjgi/jaws-dev/jtm && python3.6 -m venv /dtemp/mscjgi/jaws-dev/jtm && . /dtemp/mscjgi/jaws-dev/jtm/bin/activate && pip3 install rpc/dist/* && pip install jtm/dist/* && deactivate && chmod -R g+rx,o+rx /dtemp/mscjgi/jaws-dev/jtm || true
    - chgrp svc-jtm-user /tmp/jaws-dev/configs/jaws-jtm.conf && chmod 660 /tmp/jaws-dev/configs/jaws-jtm.conf
    # the following statement would deploy the jtm config file to the parallel fs for use by the jtm worker. problem: doing a chgrp on gpfs does not work through
    # the gitlab-runner. no fix could by found is why that copy now happens in the jtm-manager shim created by generate-shims. this is a hack.
    # - cp -a /tmp/jaws-dev/configs/jaws-jtm.conf /global/cfs/projectdirs/jaws/jtm-dev/jaws-jtm.conf
