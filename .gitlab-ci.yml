stages:
  - .pre
  - unit-test
  - package
  - deploy-jaws
  - smoke-tests
  - deployment-tests
  - stress-tests

variables:
  GIT_STRATEGY: clone

  ## GLOBAL INSTALL VARIABLES:
  JAWS_SITES: "CORI JGI"
  JAWS_VERSION: "2.3.1"
  JAWS_DOCS_URL: "https://jaws-docs.readthedocs.io/en/latest/"
  JAWS_CENTRAL_HOST: "http://jaws.lbl.gov"
  JAWS_CENTRAL_RMQ_HOST: "rmq.lbl.gov"
  JAWS_CENTRAL_RMQ_PORT: 5672
  JAWS_GLOBUS_CLIENT_ID: "1a130a01-48bc-489b-a729-9ab858de1755"
  CROMWELL_VERSION: "52"

  ## CENTRAL-SPECIFIC VARIABLES:
  JAWS_CENTRAL_DB_HOST: "jaws-db.lbl.gov"
  JAWS_CENTRAL_DB_PORT: 3306

  ## DEPLOYMENT-SPECIFIC VARIABLES:
  dev_LOG_LEVEL: "DEBUG"
  dev_JAWS_SUPERVISOR_PORT: 64101
  dev_JTM_SUPERVISOR_PORT: 64111
  dev_JAWS_CENTRAL_SUPERVISOR_PORT: 64121
  dev_JAWS_AUTH_PORT: 3001
  dev_JAWS_REST_PORT: 5001
  dev_CROMWELL_PORT: 50101
  staging_LOG_LEVEL: "DEBUG"
  staging_JAWS_SUPERVISOR_PORT: 64102
  staging_JTM_SUPERVISOR_PORT: 64112
  staging_JAWS_CENTRAL_SUPERVISOR_PORT: 64122
  staging_JAWS_AUTH_PORT: 3002
  staging_JAWS_REST_PORT: 5002
  staging_CROMWELL_PORT: 50102
  prod_LOG_LEVEL: "INFO"
  prod_JAWS_SUPERVISOR_PORT: 64103
  prod_JTM_SUPERVISOR_PORT: 64113
  prod_JAWS_CENTRAL_SUPERVISOR_PORT: 64123
  prod_JAWS_AUTH_PORT: 3003
  prod_JAWS_REST_PORT: 5003
  prod_CROMWELL_PORT: 50103

  ## CENTRAL-SPECIFIC VARIABLES:
  CENTRAL_INSTALL_BASEDIR: "/opt/jaws"
  CENTRAL_GLOBUS_EP: "be1ff650-dcbc-11ea-85a2-0e1702b77d41"
  CENTRAL_GLOBUS_ROOT_DIR: "/"
  CENTRAL_GLOBUS_DEFAULT_DIR: "~"
  CENTRAL_RMQ_HOST: "rmq.lbl.gov"
  CENTRAL_RMQ_PORT: 5672
  CENTRAL_PYTHON: "python3"
  CENTRAL_LOAD_PYTHON: ""
  CENTRAL_JAWS_GROUP: "jaws"
  CENTRAL_JAWS_SCRATCH_BASEDIR: "/tmp/jaws-tmp"
  CENTRAL_SUPERVISOR_HOST: "http://jaws.lbl.gov"
  CENTRAL_DB_HOST: "jaws-db.lbl.gov"
  CENTRAL_DB_PORT: 3306

  ## SITE-SPECIFIC VARIABLES:
  CORI_INSTALL_BASEDIR: "/global/cfs/projectdirs/jaws/jaws_install"
  CORI_GLOBUS_EP: "be1ff650-dcbc-11ea-85a2-0e1702b77d41"
  CORI_GLOBUS_HOST_PATH: "/"
  CORI_RMQ_HOST: "rmq.lbl.gov"
  CORI_RMQ_PORT: 5672
  CORI_JTM_RMQ_HOST: "rmq.lbl.gov"
  CORI_JTM_RMQ_PORT: 5672
  CORI_PYTHON: "python3"
  CORI_LOAD_PYTHON: "module load python/3.8-anaconda-2020.11"
  CORI_JAWS_GROUP: "jaws"
  CORI_JTM_GROUP: "jaws_jtm"
  CORI_CLIENT_GROUP: "genome"
  CORI_JAWS_SCRATCH_BASEDIR: "/global/cscratch1/sd/jaws"
  CORI_JTM_SCRATCH_BASEDIR: "/global/cscratch1/sd/jaws_jtm"
  CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  CORI_JTM_SW_BASEDIR: "/global/cfs/projectdirs/jaws_jtm"
  CORI_REF_DATA_DIR: " /global/dna/shared/databases/jaws/refdata"
  CORI_SUPERVISOR_HOST: "http://cori20.nersc.gov"
  CORI_CONTAINER_TYPE: "shifter"
  CORI_DB_HOST: "jaws-db.lbl.gov"
  CORI_DB_PORT: 3306
  CORI_CLUSTER_QOS: "genepool_special"
  CORI_CLUSTER_PARTITION: ""
  CORI_CLUSTER_ACCOUNT: "fungalp"
  CORI_CLUSTER_CONSTRAINT: "haswell"
  CORI_MAX_RAM_GB: 2048
  CORI_LOAD_JAVA: ""
  CORI_DATA_REPO_BASEDIR: "/global/cfs/projectdirs/jaws"

  JGI_INSTALL_BASEDIR: "/global/home/groups-sw/lr_jgicloud/jaws-install"
  JGI_GLOBUS_EP: "e8b18c38-36cd-11eb-b54c-02d9497ca481"
  JGI_GLOBUS_HOST_PATH: "/global/scratch/jaws"
  JGI_RMQ_HOST: "rmq.lbl.gov"
  JGI_RMQ_PORT: 5672
  JGI_JTM_RMQ_HOST: "rmq.lbl.gov"
  JGI_JTM_RMQ_PORT: 5672
  JGI_PYTHON: "python"
  JGI_LOAD_PYTHON: "module load python/3.8.2-dll"
  JGI_JAWS_GROUP: "jaws"
  JGI_JTM_GROUP: "jaws"
  JGI_CLIENT_GROUP: "jgi"
  JGI_JAWS_SCRATCH_BASEDIR: "/global/scratch/jaws"
  JGI_JTM_SCRATCH_BASEDIR: "/global/scratch/jaws"
  JGI_JAWS_SW_BASEDIR: "/global/home/groups-sw/lr_jgicloud"
  JGI_JTM_SW_BASEDIR: "/global/home/groups-sw/lr_jgicloud"
  JGI_REF_DATA_DIR: "/global/home/groups/lr_jgicloud/refdata"
  JGI_SUPERVISOR_HOST: "http://lrc-services.lbl.gov"
  JGI_CONTAINER_TYPE: "singularity"
  JGI_DB_HOST: "jaws-db.lbl.gov"
  JGI_DB_PORT: 3306
  JGI_CLUSTER_QOS: "normal"
  JGI_CLUSTER_PARTITION: "jgi"
  JGI_CLUSTER_ACCOUNT: "jgi"
  JGI_CLUSTER_CONSTRAINT: ""
  JGI_MAX_RAM_GB: 250
  JGI_LOAD_JAVA: "module load java"
  JGI_DATA_REPO_BASEDIR: "/global/scratch/jaws"

  CASCADE_INSTALL_BASEDIR: "/tmp"
  CASCADE_GLOBUS_EP: "49ebaf40-5773-11eb-a45f-0e095b4c2e55"
  CASCADE_GLOBUS_HOST_PATH: "/dtemp/mscjgi"
  CASCADE_RMQ_HOST: "localhost"
  CASCADE_RMQ_PORT: 5672
  CASCADE_JTM_RMQ_HOST: "localhost"
  CASCADE_JTM_RMQ_PORT: 5672
  CASCADE_PYTHON: "python3.6"
  CASCADE_LOAD_PYTHON: ". /opt/rh/rh-python36/enable"
  CASCADE_JAWS_GROUP: "svc-jtm-manager"
  CASCADE_JTM_GROUP: "svc-jtm-user"
  CASCADE_CLIENT_GROUP: "svc-jtm-manager"
  CASCADE_JAWS_SCRATCH_BASEDIR: "/dtemp/mscjgi"
  CASCADE_JTM_SCRATCH_BASEDIR: "/dtemp/mscjgi"
  CASCADE_JAWS_SW_BASEDIR: "/dtemp/mscjgi"
  CASCADE_JTM_SW_BASEDIR: "/dtemp/mscjgi"
  CASCADE_REF_DATA_DIR: "/dtemp/mscjgi/refdata" # TODO: Needs to be rsync'd
  CASCADE_SUPERVISOR_HOST: "http://localhost"
  CASCADE_CONTAINER_TYPE: "singularity"
  CASCADE_DB_HOST: "localhost"
  CASCADE_DB_PORT: 3306
  CASCADE_CLUSTER_QOS: ""
  CASCADE_CLUSTER_PARTITION: ""
  CASCADE_CLUSTER_ACCOUNT: "mscjgi"
  CASCADE_CLUSTER_CONSTRAINT: ""
  CASCADE_MAX_RAM_GB: 1024  #TODO: Find a more accurate number
  CASCADE_LOAD_JAVA: ":"  # no-op
  CASCADE_DATA_REPO_BASEDIR: "/dtemp/mscjgi"

# this needs to be commented out in the jobs definitions, for the jobs to
# run in any case and not only when pushing a merge request.
.only-default: &only-default
  tags:
    - aws
    - jaws
  only:
    - master
    - branches
    - merge_requests
    - tags

test-rpc:
  <<: *only-default
  stage: unit-test
  script:
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install -r rpc/requirements.txt
    - pip install flake8 pytest pytest-cov
    - make test-rpc
  artifacts:
    reports:
      junit: rpc/rpc.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
test-site:
  <<: *only-default
  stage: unit-test
  script:
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install rpc/
    - pip install -r site/requirements.txt
    - pip install flake8 pytest pytest-cov
    - make test-site
  artifacts:
    reports:
      junit: site/site.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
test-central:
  <<: *only-default
  stage: unit-test
  script:
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install rpc/
    - pip install -r central/requirements.txt
    - pip install flake8 pytest pytest-cov
    - make test-central
  artifacts:
    reports:
      junit: central/central.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
test-client:
  <<: *only-default
  stage: unit-test
  script:
      # some unit tests for client require 'womtool' to be in the PATH
    - export PATH=/jaws-ci/bin:$PATH
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install -r client/requirements.txt
    - pip install flake8 pytest pytest-cov
    - make test-client
  artifacts:
    reports:
      junit: client/client.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
test-jtm:
  <<: *only-default
  stage: unit-test
  script:
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip install rpc/
    - pip install -r jtm/requirements.txt
    - pip install flake8 pytest pytest-cov
    - make test-jtm
  artifacts:
    reports:
      junit: jtm/jtm.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'

package:
  <<: *only-default
  stage: package
  script:
    - python3 -m venv pkg-venv
    - source pkg-venv/bin/activate
    - pip install wheel
    - make pkg

## integration tests - only run on merge request
deploy-jaws-central-dev:
  stage: deploy-jaws
  tags:
    - central
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "CENTRAL"
    DEPLOY_JAWS_CLIENT: 1
  environment:
    name: "central/dev"
  script:
    - ./test/integration/deploy-central
  only:
  - dev
deploy-jaws-central-staging:
  stage: deploy-jaws
  tags:
    - central
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "CENTRAL"
    DEPLOY_JAWS_CLIENT: 0
  environment:
    name: "central/staging"
  script:
    - ./test/integration/deploy-central
  only:
  - staging
deploy-jaws-central-prod:
  stage: deploy-jaws
  tags:
    - central
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "CENTRAL"
    DEPLOY_JAWS_CLIENT: 0
  environment:
    name: "central/production"
  script:
    - ./test/integration/deploy-central
  only:
  - master

deploy-jaws-cori-dev:
  stage: deploy-jaws
  tags:
    - cori
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "CORI"
    DEPLOY_JAWS_CLIENT: 1
  environment:
    name: "cori/dev"
  script:
    - ./test/integration/deploy-jaws
  only:
  - dev
deploy-jaws-cori-staging:
  stage: deploy-jaws
  tags:
    - cori
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "CORI"
    DEPLOY_JAWS_CLIENT: 1
  environment:
    name: "cori/staging"
  script:
    - ./test/integration/deploy-jaws
  only:
  - staging
deploy-jaws-cori-prod:
  stage: deploy-jaws
  tags:
    - cori
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "CORI"
    DEPLOY_JAWS_CLIENT: 1
  environment:
    name: "cori/production"
  script:
    - ./test/integration/deploy-jaws
  only:
  - master

deploy-jaws-jgi-dev:
  stage: deploy-jaws
  tags:
    - jgi
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "JGI"
    DEPLOY_JAWS_CLIENT: 1
  environment:
    name: "jgi/dev"
  script:
    - ./test/integration/deploy-jaws
  only:
  - dev
deploy-jaws-jgi-staging:
  stage: deploy-jaws
  tags:
    - jgi
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "JGI"
    DEPLOY_JAWS_CLIENT: 1
  environment:
    name: "jgi/staging"
  script:
    - ./test/integration/deploy-jaws
  only:
  - staging
deploy-jaws-jgi-prod:
  stage: deploy-jaws
  tags:
    - jgi
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "JGI"
    DEPLOY_JAWS_CLIENT: 1
  environment:
    name: "jgi/production"
  script:
    - ./test/integration/deploy-jaws
  only:
  - master

deploy-jaws-cascade-dev:
  stage: deploy-jaws
  tags:
    - cascade
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "CASCADE"
  environment:
    name: "cascade/dev"
  script:
    - ./test/integration/deploy-jaws
  only:
    - dev

cori-dev-smoke-tests:
  stage: smoke-tests
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh smoke-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  allow_failure: true

jgi-dev-smoke-tests:
  stage: smoke-tests
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh smoke-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  allow_failure: true

cori-dev-deployment-tests:
  stage: deployment-tests
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh deployment-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  allow_failure: true

jgi-dev-deployment-tests:
  stage: deployment-tests
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh deployment-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  allow_failure: true

cori-dev-stress-tests:
  stage: stress-tests
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh stress-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  allow_failure: true

jgi-dev-stress-tests:
  stage: stress-tests
  variables:
    DEPLOYMENT_NAME: "dev"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh stress-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  allow_failure: true

cori-staging-smoke-tests:
  stage: smoke-tests
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh smoke-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "staging"'
      when: manual
  allow_failure: true

jgi-staging-smoke-tests:
  stage: smoke-tests
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh smoke-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "staging"'
      when: manual
  allow_failure: true

cori-staging-deployment-tests:
  stage: deployment-tests
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh deployment-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "staging"'
      when: manual
  allow_failure: true

jgi-staging-deployment-tests:
  stage: deployment-tests
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh deployment-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "staging"'
      when: manual
  allow_failure: true

cori-staging-stress-tests:
  stage: stress-tests
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh stress-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "staging"'
      when: manual
  allow_failure: true

jgi-staging-stress-tests:
  stage: stress-tests
  variables:
    DEPLOYMENT_NAME: "staging"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh stress-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "staging"'
      when: manual
  allow_failure: true

cori-prod-smoke-tests:
  stage: smoke-tests
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh smoke-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "master"'
      when: manual
  allow_failure: true

jgi-prod-smoke-tests:
  stage: smoke-tests
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh smoke-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "master"'
      when: manual
  allow_failure: true

cori-prod-deployment-tests:
  stage: deployment-tests
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh deployment-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "master"'
      when: manual
  allow_failure: true

jgi-prod-deployment-tests:
  stage: deployment-tests
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh deployment-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "master"'
      when: manual
  allow_failure: true

cori-prod-stress-tests:
  stage: stress-tests
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "CORI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh stress-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "master"'
      when: manual
  allow_failure: true

jgi-prod-stress-tests:
  stage: stress-tests
  variables:
    DEPLOYMENT_NAME: "prod"
    JAWS_SITE: "JGI"
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - ./test/integration/end-to-end-tests/pytest_wrapper.sh stress-tests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH == "master"'
      when: manual
  allow_failure: true

git-clone-docs:
  stage: .pre
  variables:
    CORI_INSTALL_BASEDIR: "/tmp"
    CORI_JAWS_SW_BASEDIR: "/global/cfs/projectdirs/jaws"
  tags:
    - cori
  script:
    - git clone https://gitlab.com/jfroula/jaws-docs.git
    - cp -r docs/sphinx/source/* jaws-docs/docs/source/
    - cd jaws-docs && echo "mo better blues" > itts
    - git add . && git commit -m 'syncing docs' 
    - git remote show origin
    - git remote set-url --push origin git@gitlab:$CI_PROJECT_PATH
    - git remote show origin
    - git push --follow-tags origin HEAD:$CI_COMMIT_REF_NAME
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  allow_failure: true
