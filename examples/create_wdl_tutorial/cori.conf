# include the application.conf at the top
include required(classpath("application"))

docker {
	hash-lookup {
      enabled = false
	}
}

backend {
  default = "Local"

  providers {

    Local {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {

        run-in-background = true

        submit = "/bin/bash ${script}"
        root = "cromwell-executions"

        filesystems {
          local {
            localization: [
              "hard-link", "soft-link", "copy"
            ]

            caching {
              # When copying a cached result, what type of file duplication should occur. Attempted in the order listed below:
              duplication-strategy: [
                "hard-link", "soft-link", "copy"
              ]

              hashing-strategy: "file"

              check-sibling-md5: false
            }
          }
        }

        default-runtime-attributes {
          failOnStderr: false
          continueOnReturnCode: 0
        }
      }
    }


    # Example backend that _only_ runs workflows that specify docker for every command.
    Docker {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

      config {
        run-in-background = true
        # The list of possible runtime custom attributes.
        runtime-attributes = """
            String? docker
        """

        # Submit string when there is a "docker" runtime attribute.
        submit-docker = """
            shifter --image=${docker} \
            -V /global/dna/shared/rqc/ref_databases/ncbi/CURRENT:/refdata \
            ${job_shell} ${script}
        """

        # Root directory where Cromwell writes job results in the container. This value
        # can be used to specify where the execution folder is mounted in the container.
        # it is used for the construction of the docker_cwd string in the submit-docker
        # value above AND in the generation of the "script" file.
        dockerRoot = /global/cscratch1/sd/jfroula/JAWS/jaws-subworkflows/blastn-shard/cromwell-executions

      }
    }
  }
}
